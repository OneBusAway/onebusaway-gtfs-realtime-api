onebusaway-gtfs-realtime-api

  The {{{http://code.google.com/transit/realtime/}GTFS-realtime}} specification defines a standard for exchanging
real-time public transit information in a machine-readable way.  The core of the specification is a Protocol Buffer
definition declaring the various data types that make up a GTFS-realtime feed.

  While Protocol Buffers are designed to be language agnostic, language-specific bindings are typically generated to
read or write a buffer using a specific language.  We provide a simple Java library of the classes produced when the
{{{http://code.google.com/transit/realtime/}GTFS-realtime}} protobuf is compiled for Java.

  You can use the library in a number of ways:

#set( $url = 'http://nexus.onebusaway.org/service/local/artifact/maven/content?r=public&g=org.onebusaway&a=onebusaway-gtfs-realtime-api&v=' + ${currentVersion} )

  * Download the jar directly: {{{${url}}onebusaway-gtfs-realtime-api.jar}}

  * Using a Maven dependency: 
 
+---+
<dependency>
  <groupId>org.onebusaway</groupId>
  <artifactId>onebusaway-gtfs-realtime-api</artifactId>
  <version>${currentVersion}</version>
</dependency>
+---+

* Documentation

  You can access the {{{./apidocs/index.html}latest Javadoc for the library}}.  Here's a quick example of using the
library to construct a feed message:

+---+
FeedMessage.Builder feedMessageBuilder = FeedMessage.newBuilder();

FeedHeader.Builder header = FeedHeader.newBuilder();
header.setTimestamp(System.currentTimeMillis());
header.setIncrementality(Incrementality.FULL_DATASET);
header.setGtfsRealtimeVersion(GtfsRealtimeConstants.VERSION);
feedMessageBuilder.setHeader(header);

VehiclePosition.Builder vp = VehiclePosition.newBuilder();

TripDescriptor.Builder td = TripDescriptor.newBuilder();
td.setTripId("tripId");
vp.setTrip(td);

VehicleDescriptor.Builder vd = VehicleDescriptor.newBuilder();
vd.setId("vehicleId");
vp.setVehicle(vd);

vp.setTimestamp(System.currentTimeMillis());

Position.Builder position = Position.newBuilder();
position.setLatitude(47.653738);
position.setLongitude(-122.307786);
vp.setPosition(position);

FeedEntity.Builder entity = FeedEntity.newBuilder();
entity.setId("entityId");
entity.setVehicle(vp);
feedMessageBuilder.addEntity(entity);

FeedMessage message = feedMessageBuilder.build();

BufferedOutputStream out = new BufferedOutputStream(new FileOutputStream("path/to/output"));
message.writeTo(out);
out.close();
+---+