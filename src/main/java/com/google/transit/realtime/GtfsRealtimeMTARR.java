/**
 * Portions of this module are modifications based on work created and shared by Google:
 *
 *   http://code.google.com/policies.html
 *
 * and used according to terms described in the Creative Commons 3.0 Attribution License:
 *
 *   http://creativecommons.org/licenses/by/3.0/
 *
 * Specifically, the gtfs-realtime.proto:
 *
 *   http://code.google.com/transit/realtime/docs/gtfs-realtime_proto.html
 *
 * was used to generate the classes contained within.
 *
 * Portions of this module are modifications based on work created by the New York
 * City Metropolitan Transportation Authority.
 *
 * All code is Copyright (C) 2011 Google, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/google/transit/realtime/gtfs-realtime-MTARR.proto

package com.google.transit.realtime;

public final class GtfsRealtimeMTARR {
  private GtfsRealtimeMTARR() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(com.google.transit.realtime.GtfsRealtimeMTARR.mtaRailroadStopTimeUpdate);
    registry.add(com.google.transit.realtime.GtfsRealtimeMTARR.carriageDescriptor);
  }
  public interface MtaRailroadStopTimeUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:transit_realtime.MtaRailroadStopTimeUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string track = 1;</code>
     */
    boolean hasTrack();
    /**
     * <code>optional string track = 1;</code>
     */
    java.lang.String getTrack();
    /**
     * <code>optional string track = 1;</code>
     */
    com.google.protobuf.ByteString
        getTrackBytes();

    /**
     * <code>optional string trainStatus = 2;</code>
     */
    boolean hasTrainStatus();
    /**
     * <code>optional string trainStatus = 2;</code>
     */
    java.lang.String getTrainStatus();
    /**
     * <code>optional string trainStatus = 2;</code>
     */
    com.google.protobuf.ByteString
        getTrainStatusBytes();
  }
  /**
   * Protobuf type {@code transit_realtime.MtaRailroadStopTimeUpdate}
   */
  public static final class MtaRailroadStopTimeUpdate extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:transit_realtime.MtaRailroadStopTimeUpdate)
      MtaRailroadStopTimeUpdateOrBuilder {
    // Use MtaRailroadStopTimeUpdate.newBuilder() to construct.
    private MtaRailroadStopTimeUpdate(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MtaRailroadStopTimeUpdate(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MtaRailroadStopTimeUpdate defaultInstance;
    public static MtaRailroadStopTimeUpdate getDefaultInstance() {
      return defaultInstance;
    }

    public MtaRailroadStopTimeUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MtaRailroadStopTimeUpdate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              track_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              trainStatus_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_MtaRailroadStopTimeUpdate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_MtaRailroadStopTimeUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate.class, com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate.Builder.class);
    }

    public static com.google.protobuf.Parser<MtaRailroadStopTimeUpdate> PARSER =
        new com.google.protobuf.AbstractParser<MtaRailroadStopTimeUpdate>() {
      public MtaRailroadStopTimeUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MtaRailroadStopTimeUpdate(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MtaRailroadStopTimeUpdate> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TRACK_FIELD_NUMBER = 1;
    private java.lang.Object track_;
    /**
     * <code>optional string track = 1;</code>
     */
    public boolean hasTrack() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string track = 1;</code>
     */
    public java.lang.String getTrack() {
      java.lang.Object ref = track_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          track_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string track = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTrackBytes() {
      java.lang.Object ref = track_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        track_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRAINSTATUS_FIELD_NUMBER = 2;
    private java.lang.Object trainStatus_;
    /**
     * <code>optional string trainStatus = 2;</code>
     */
    public boolean hasTrainStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string trainStatus = 2;</code>
     */
    public java.lang.String getTrainStatus() {
      java.lang.Object ref = trainStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          trainStatus_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string trainStatus = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTrainStatusBytes() {
      java.lang.Object ref = trainStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trainStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      track_ = "";
      trainStatus_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTrackBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTrainStatusBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTrackBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTrainStatusBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code transit_realtime.MtaRailroadStopTimeUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:transit_realtime.MtaRailroadStopTimeUpdate)
        com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_MtaRailroadStopTimeUpdate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_MtaRailroadStopTimeUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate.class, com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate.Builder.class);
      }

      // Construct using com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        track_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        trainStatus_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_MtaRailroadStopTimeUpdate_descriptor;
      }

      public com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate getDefaultInstanceForType() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate.getDefaultInstance();
      }

      public com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate build() {
        com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate buildPartial() {
        com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate result = new com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.track_ = track_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.trainStatus_ = trainStatus_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate) {
          return mergeFrom((com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate other) {
        if (other == com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate.getDefaultInstance()) return this;
        if (other.hasTrack()) {
          bitField0_ |= 0x00000001;
          track_ = other.track_;
          onChanged();
        }
        if (other.hasTrainStatus()) {
          bitField0_ |= 0x00000002;
          trainStatus_ = other.trainStatus_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object track_ = "";
      /**
       * <code>optional string track = 1;</code>
       */
      public boolean hasTrack() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string track = 1;</code>
       */
      public java.lang.String getTrack() {
        java.lang.Object ref = track_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            track_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string track = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTrackBytes() {
        java.lang.Object ref = track_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          track_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string track = 1;</code>
       */
      public Builder setTrack(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        track_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string track = 1;</code>
       */
      public Builder clearTrack() {
        bitField0_ = (bitField0_ & ~0x00000001);
        track_ = getDefaultInstance().getTrack();
        onChanged();
        return this;
      }
      /**
       * <code>optional string track = 1;</code>
       */
      public Builder setTrackBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        track_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object trainStatus_ = "";
      /**
       * <code>optional string trainStatus = 2;</code>
       */
      public boolean hasTrainStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string trainStatus = 2;</code>
       */
      public java.lang.String getTrainStatus() {
        java.lang.Object ref = trainStatus_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            trainStatus_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string trainStatus = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTrainStatusBytes() {
        java.lang.Object ref = trainStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trainStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string trainStatus = 2;</code>
       */
      public Builder setTrainStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        trainStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string trainStatus = 2;</code>
       */
      public Builder clearTrainStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        trainStatus_ = getDefaultInstance().getTrainStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string trainStatus = 2;</code>
       */
      public Builder setTrainStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        trainStatus_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:transit_realtime.MtaRailroadStopTimeUpdate)
    }

    static {
      defaultInstance = new MtaRailroadStopTimeUpdate(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:transit_realtime.MtaRailroadStopTimeUpdate)
  }

  public interface CarriageDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:transit_realtime.CarriageDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Internal system identification of the carriage. Should be unique per
     * vehicle, and can be used for tracking the carriage as it proceeds through
     * the system.
     * </pre>
     */
    boolean hasId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Internal system identification of the carriage. Should be unique per
     * vehicle, and can be used for tracking the carriage as it proceeds through
     * the system.
     * </pre>
     */
    java.lang.String getId();
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Internal system identification of the carriage. Should be unique per
     * vehicle, and can be used for tracking the carriage as it proceeds through
     * the system.
     * </pre>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>optional string label = 2;</code>
     *
     * <pre>
     * User visible label that may be shown to the passenger to help identify
     * the carriage.
     * </pre>
     */
    boolean hasLabel();
    /**
     * <code>optional string label = 2;</code>
     *
     * <pre>
     * User visible label that may be shown to the passenger to help identify
     * the carriage.
     * </pre>
     */
    java.lang.String getLabel();
    /**
     * <code>optional string label = 2;</code>
     *
     * <pre>
     * User visible label that may be shown to the passenger to help identify
     * the carriage.
     * </pre>
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    /**
     * <code>optional int32 carriage_sequence = 3;</code>
     *
     * <pre>
     * Identifies the order of this carriage with respect to the other
     * carriages in the vehicle's list of CarriageDescriptors. The values must
     * be non-negative, and there cannot be duplicate values in the list of
     * CarriageDescriptors. The values must be set such that the lowest value
     * corresponds to the first carriage in the direction of travel, the
     * second-lowest value corresponds to the second carriage in the direction
     * of travel and so forth. For example, the first carriage in the direction
     * of travel could have a carriage_sequence of 4, the second carriage could
     * have a carriage_sequence of 10, the third carriage could have a
     * carriage_sequence of 105, and so forth.
     * </pre>
     */
    boolean hasCarriageSequence();
    /**
     * <code>optional int32 carriage_sequence = 3;</code>
     *
     * <pre>
     * Identifies the order of this carriage with respect to the other
     * carriages in the vehicle's list of CarriageDescriptors. The values must
     * be non-negative, and there cannot be duplicate values in the list of
     * CarriageDescriptors. The values must be set such that the lowest value
     * corresponds to the first carriage in the direction of travel, the
     * second-lowest value corresponds to the second carriage in the direction
     * of travel and so forth. For example, the first carriage in the direction
     * of travel could have a carriage_sequence of 4, the second carriage could
     * have a carriage_sequence of 10, the third carriage could have a
     * carriage_sequence of 105, and so forth.
     * </pre>
     */
    int getCarriageSequence();

    /**
     * <code>optional .transit_realtime.CarriageDescriptor.OccupancyStatus occupancy_status = 4;</code>
     *
     * <pre>
     * The degree of passenger occupancy of the carriage.
     * </pre>
     */
    boolean hasOccupancyStatus();
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.OccupancyStatus occupancy_status = 4;</code>
     *
     * <pre>
     * The degree of passenger occupancy of the carriage.
     * </pre>
     */
    com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus getOccupancyStatus();

    /**
     * <code>optional .transit_realtime.CarriageDescriptor.WheelchairAccessible wheelchair_accessible = 5 [default = UNKNOWN_ACCESSIBILITY];</code>
     */
    boolean hasWheelchairAccessible();
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.WheelchairAccessible wheelchair_accessible = 5 [default = UNKNOWN_ACCESSIBILITY];</code>
     */
    com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible getWheelchairAccessible();

    /**
     * <code>optional .transit_realtime.CarriageDescriptor.ToiletFacilities toilet_facilities = 6 [default = UNKNOWN_TOILET_FACILITIES];</code>
     */
    boolean hasToiletFacilities();
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.ToiletFacilities toilet_facilities = 6 [default = UNKNOWN_TOILET_FACILITIES];</code>
     */
    com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities getToiletFacilities();

    /**
     * <code>optional .transit_realtime.CarriageDescriptor.WifiAvailability wifi_availability = 7 [default = UNKNOWN_WIFI_AVAILABILITY];</code>
     */
    boolean hasWifiAvailability();
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.WifiAvailability wifi_availability = 7 [default = UNKNOWN_WIFI_AVAILABILITY];</code>
     */
    com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability getWifiAvailability();

    /**
     * <code>optional .transit_realtime.CarriageDescriptor.AirConditioning air_conditioning = 8 [default = UNKNOWN_AIRCONDITIONING];</code>
     */
    boolean hasAirConditioning();
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.AirConditioning air_conditioning = 8 [default = UNKNOWN_AIRCONDITIONING];</code>
     */
    com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning getAirConditioning();

    /**
     * <code>optional .transit_realtime.CarriageDescriptor.BicyclesAllowed bicycles_allowed = 9 [default = UNKNOWN_BICYCLES_ALLOWED];</code>
     */
    boolean hasBicyclesAllowed();
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.BicyclesAllowed bicycles_allowed = 9 [default = UNKNOWN_BICYCLES_ALLOWED];</code>
     */
    com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed getBicyclesAllowed();
  }
  /**
   * Protobuf type {@code transit_realtime.CarriageDescriptor}
   */
  public static final class CarriageDescriptor extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:transit_realtime.CarriageDescriptor)
      CarriageDescriptorOrBuilder {
    // Use CarriageDescriptor.newBuilder() to construct.
    private CarriageDescriptor(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CarriageDescriptor(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CarriageDescriptor defaultInstance;
    public static CarriageDescriptor getDefaultInstance() {
      return defaultInstance;
    }

    public CarriageDescriptor getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CarriageDescriptor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              id_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              label_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              carriageSequence_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus value = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                occupancyStatus_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible value = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                wheelchairAccessible_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities value = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                toiletFacilities_ = value;
              }
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability value = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                wifiAvailability_ = value;
              }
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning value = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                airConditioning_ = value;
              }
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed value = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                bicyclesAllowed_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_CarriageDescriptor_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_CarriageDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.class, com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.Builder.class);
    }

    public static com.google.protobuf.Parser<CarriageDescriptor> PARSER =
        new com.google.protobuf.AbstractParser<CarriageDescriptor>() {
      public CarriageDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CarriageDescriptor(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CarriageDescriptor> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code transit_realtime.CarriageDescriptor.OccupancyStatus}
     *
     * <pre>
     * The degree of passenger occupancy of the vehicle. This field is still
     * experimental, and subject to change. It may be formally adopted in the
     * future.
     * </pre>
     */
    public enum OccupancyStatus
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>EMPTY = 0;</code>
       *
       * <pre>
       * The vehicle is considered empty by most measures, and has few or no
       * passengers onboard, but is still accepting passengers.
       * </pre>
       */
      EMPTY(0, 0),
      /**
       * <code>MANY_SEATS_AVAILABLE = 1;</code>
       *
       * <pre>
       * The vehicle has a relatively large percentage of seats available.
       * What percentage of free seats out of the total seats available is to be
       * considered large enough to fall into this category is determined at the
       * discretion of the producer.
       * </pre>
       */
      MANY_SEATS_AVAILABLE(1, 1),
      /**
       * <code>FEW_SEATS_AVAILABLE = 2;</code>
       *
       * <pre>
       * The vehicle has a relatively small percentage of seats available.
       * What percentage of free seats out of the total seats available is to be
       * considered small enough to fall into this category is determined at the
       * discretion of the feed producer.
       * </pre>
       */
      FEW_SEATS_AVAILABLE(2, 2),
      /**
       * <code>STANDING_ROOM_ONLY = 3;</code>
       *
       * <pre>
       * The vehicle can currently accommodate only standing passengers.
       * </pre>
       */
      STANDING_ROOM_ONLY(3, 3),
      /**
       * <code>CRUSHED_STANDING_ROOM_ONLY = 4;</code>
       *
       * <pre>
       * The vehicle can currently accommodate only standing passengers
       * and has limited space for them.
       * </pre>
       */
      CRUSHED_STANDING_ROOM_ONLY(4, 4),
      /**
       * <code>FULL = 5;</code>
       *
       * <pre>
       * The vehicle is considered full by most measures, but may still be
       * allowing passengers to board.
       * </pre>
       */
      FULL(5, 5),
      /**
       * <code>NOT_ACCEPTING_PASSENGERS = 6;</code>
       *
       * <pre>
       * The vehicle is not accepting additional passengers.
       * </pre>
       */
      NOT_ACCEPTING_PASSENGERS(6, 6),
      ;

      /**
       * <code>EMPTY = 0;</code>
       *
       * <pre>
       * The vehicle is considered empty by most measures, and has few or no
       * passengers onboard, but is still accepting passengers.
       * </pre>
       */
      public static final int EMPTY_VALUE = 0;
      /**
       * <code>MANY_SEATS_AVAILABLE = 1;</code>
       *
       * <pre>
       * The vehicle has a relatively large percentage of seats available.
       * What percentage of free seats out of the total seats available is to be
       * considered large enough to fall into this category is determined at the
       * discretion of the producer.
       * </pre>
       */
      public static final int MANY_SEATS_AVAILABLE_VALUE = 1;
      /**
       * <code>FEW_SEATS_AVAILABLE = 2;</code>
       *
       * <pre>
       * The vehicle has a relatively small percentage of seats available.
       * What percentage of free seats out of the total seats available is to be
       * considered small enough to fall into this category is determined at the
       * discretion of the feed producer.
       * </pre>
       */
      public static final int FEW_SEATS_AVAILABLE_VALUE = 2;
      /**
       * <code>STANDING_ROOM_ONLY = 3;</code>
       *
       * <pre>
       * The vehicle can currently accommodate only standing passengers.
       * </pre>
       */
      public static final int STANDING_ROOM_ONLY_VALUE = 3;
      /**
       * <code>CRUSHED_STANDING_ROOM_ONLY = 4;</code>
       *
       * <pre>
       * The vehicle can currently accommodate only standing passengers
       * and has limited space for them.
       * </pre>
       */
      public static final int CRUSHED_STANDING_ROOM_ONLY_VALUE = 4;
      /**
       * <code>FULL = 5;</code>
       *
       * <pre>
       * The vehicle is considered full by most measures, but may still be
       * allowing passengers to board.
       * </pre>
       */
      public static final int FULL_VALUE = 5;
      /**
       * <code>NOT_ACCEPTING_PASSENGERS = 6;</code>
       *
       * <pre>
       * The vehicle is not accepting additional passengers.
       * </pre>
       */
      public static final int NOT_ACCEPTING_PASSENGERS_VALUE = 6;


      public final int getNumber() { return value; }

      public static OccupancyStatus valueOf(int value) {
        switch (value) {
          case 0: return EMPTY;
          case 1: return MANY_SEATS_AVAILABLE;
          case 2: return FEW_SEATS_AVAILABLE;
          case 3: return STANDING_ROOM_ONLY;
          case 4: return CRUSHED_STANDING_ROOM_ONLY;
          case 5: return FULL;
          case 6: return NOT_ACCEPTING_PASSENGERS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<OccupancyStatus>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<OccupancyStatus>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OccupancyStatus>() {
              public OccupancyStatus findValueByNumber(int number) {
                return OccupancyStatus.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.getDescriptor().getEnumTypes().get(0);
      }

      private static final OccupancyStatus[] VALUES = values();

      public static OccupancyStatus valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private OccupancyStatus(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:transit_realtime.CarriageDescriptor.OccupancyStatus)
    }

    /**
     * Protobuf enum {@code transit_realtime.CarriageDescriptor.WheelchairAccessible}
     *
     * <pre>
     * Whether the carriage is wheelchair accessible.
     * </pre>
     */
    public enum WheelchairAccessible
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_ACCESSIBILITY = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage is wheelchair accessible. This is the
       * default case.
       * </pre>
       */
      UNKNOWN_ACCESSIBILITY(0, 0),
      /**
       * <code>WHEELCHAIR_ACCESSIBLE = 1;</code>
       *
       * <pre>
       * The carriage is wheelchair accessible.
       * </pre>
       */
      WHEELCHAIR_ACCESSIBLE(1, 1),
      /**
       * <code>NOT_WHEELCHAIR_ACCESSIBLE = 2;</code>
       *
       * <pre>
       * The carriage is not wheelchair accessible.
       * </pre>
       */
      NOT_WHEELCHAIR_ACCESSIBLE(2, 2),
      ;

      /**
       * <code>UNKNOWN_ACCESSIBILITY = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage is wheelchair accessible. This is the
       * default case.
       * </pre>
       */
      public static final int UNKNOWN_ACCESSIBILITY_VALUE = 0;
      /**
       * <code>WHEELCHAIR_ACCESSIBLE = 1;</code>
       *
       * <pre>
       * The carriage is wheelchair accessible.
       * </pre>
       */
      public static final int WHEELCHAIR_ACCESSIBLE_VALUE = 1;
      /**
       * <code>NOT_WHEELCHAIR_ACCESSIBLE = 2;</code>
       *
       * <pre>
       * The carriage is not wheelchair accessible.
       * </pre>
       */
      public static final int NOT_WHEELCHAIR_ACCESSIBLE_VALUE = 2;


      public final int getNumber() { return value; }

      public static WheelchairAccessible valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN_ACCESSIBILITY;
          case 1: return WHEELCHAIR_ACCESSIBLE;
          case 2: return NOT_WHEELCHAIR_ACCESSIBLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<WheelchairAccessible>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<WheelchairAccessible>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WheelchairAccessible>() {
              public WheelchairAccessible findValueByNumber(int number) {
                return WheelchairAccessible.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.getDescriptor().getEnumTypes().get(1);
      }

      private static final WheelchairAccessible[] VALUES = values();

      public static WheelchairAccessible valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private WheelchairAccessible(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:transit_realtime.CarriageDescriptor.WheelchairAccessible)
    }

    /**
     * Protobuf enum {@code transit_realtime.CarriageDescriptor.ToiletFacilities}
     *
     * <pre>
     * Whether the carriage has toilet facilities onboard.
     * </pre>
     */
    public enum ToiletFacilities
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_TOILET_FACILITIES = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage has toilet facilities. This is the
       * default case.
       * </pre>
       */
      UNKNOWN_TOILET_FACILITIES(0, 0),
      /**
       * <code>TOILET_ONBOARD = 1;</code>
       *
       * <pre>
       * The carriage has toilet facilities onboard.
       * </pre>
       */
      TOILET_ONBOARD(1, 1),
      /**
       * <code>NO_TOILET_ONBOARD = 2;</code>
       *
       * <pre>
       * The carriage does not have toilet facilities onboard.
       * </pre>
       */
      NO_TOILET_ONBOARD(2, 2),
      ;

      /**
       * <code>UNKNOWN_TOILET_FACILITIES = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage has toilet facilities. This is the
       * default case.
       * </pre>
       */
      public static final int UNKNOWN_TOILET_FACILITIES_VALUE = 0;
      /**
       * <code>TOILET_ONBOARD = 1;</code>
       *
       * <pre>
       * The carriage has toilet facilities onboard.
       * </pre>
       */
      public static final int TOILET_ONBOARD_VALUE = 1;
      /**
       * <code>NO_TOILET_ONBOARD = 2;</code>
       *
       * <pre>
       * The carriage does not have toilet facilities onboard.
       * </pre>
       */
      public static final int NO_TOILET_ONBOARD_VALUE = 2;


      public final int getNumber() { return value; }

      public static ToiletFacilities valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN_TOILET_FACILITIES;
          case 1: return TOILET_ONBOARD;
          case 2: return NO_TOILET_ONBOARD;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ToiletFacilities>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ToiletFacilities>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ToiletFacilities>() {
              public ToiletFacilities findValueByNumber(int number) {
                return ToiletFacilities.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.getDescriptor().getEnumTypes().get(2);
      }

      private static final ToiletFacilities[] VALUES = values();

      public static ToiletFacilities valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private ToiletFacilities(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:transit_realtime.CarriageDescriptor.ToiletFacilities)
    }

    /**
     * Protobuf enum {@code transit_realtime.CarriageDescriptor.WifiAvailability}
     *
     * <pre>
     * Whether the carriage has WiFi onboard.
     * </pre>
     */
    public enum WifiAvailability
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_WIFI_AVAILABILITY = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage has WiFi. This is the default case.
       * </pre>
       */
      UNKNOWN_WIFI_AVAILABILITY(0, 0),
      /**
       * <code>FREE_WIFI = 1;</code>
       *
       * <pre>
       * The carriage has free WiFi available for passengers to use.
       * </pre>
       */
      FREE_WIFI(1, 1),
      /**
       * <code>PAID_WIFI = 2;</code>
       *
       * <pre>
       * The carriage has WiFi available for passengers to purchase.
       * </pre>
       */
      PAID_WIFI(2, 2),
      /**
       * <code>NO_WIFI = 3;</code>
       *
       * <pre>
       * The carriage has no WiFi available for passengers to use.
       * </pre>
       */
      NO_WIFI(3, 3),
      ;

      /**
       * <code>UNKNOWN_WIFI_AVAILABILITY = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage has WiFi. This is the default case.
       * </pre>
       */
      public static final int UNKNOWN_WIFI_AVAILABILITY_VALUE = 0;
      /**
       * <code>FREE_WIFI = 1;</code>
       *
       * <pre>
       * The carriage has free WiFi available for passengers to use.
       * </pre>
       */
      public static final int FREE_WIFI_VALUE = 1;
      /**
       * <code>PAID_WIFI = 2;</code>
       *
       * <pre>
       * The carriage has WiFi available for passengers to purchase.
       * </pre>
       */
      public static final int PAID_WIFI_VALUE = 2;
      /**
       * <code>NO_WIFI = 3;</code>
       *
       * <pre>
       * The carriage has no WiFi available for passengers to use.
       * </pre>
       */
      public static final int NO_WIFI_VALUE = 3;


      public final int getNumber() { return value; }

      public static WifiAvailability valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN_WIFI_AVAILABILITY;
          case 1: return FREE_WIFI;
          case 2: return PAID_WIFI;
          case 3: return NO_WIFI;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<WifiAvailability>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<WifiAvailability>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WifiAvailability>() {
              public WifiAvailability findValueByNumber(int number) {
                return WifiAvailability.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.getDescriptor().getEnumTypes().get(3);
      }

      private static final WifiAvailability[] VALUES = values();

      public static WifiAvailability valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private WifiAvailability(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:transit_realtime.CarriageDescriptor.WifiAvailability)
    }

    /**
     * Protobuf enum {@code transit_realtime.CarriageDescriptor.AirConditioning}
     *
     * <pre>
     * Whether the carriage is air conditioned.
     * </pre>
     */
    public enum AirConditioning
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_AIRCONDITIONING = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage is air conditioned. This is the default
       * case.
       * </pre>
       */
      UNKNOWN_AIRCONDITIONING(0, 0),
      /**
       * <code>AIR_CONDITIONED = 1;</code>
       *
       * <pre>
       * The carriage has air conditioning.
       * </pre>
       */
      AIR_CONDITIONED(1, 1),
      /**
       * <code>NOT_AIR_CONDITIONED = 2;</code>
       *
       * <pre>
       * The carriage does not have air conditioning.
       * </pre>
       */
      NOT_AIR_CONDITIONED(2, 2),
      ;

      /**
       * <code>UNKNOWN_AIRCONDITIONING = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage is air conditioned. This is the default
       * case.
       * </pre>
       */
      public static final int UNKNOWN_AIRCONDITIONING_VALUE = 0;
      /**
       * <code>AIR_CONDITIONED = 1;</code>
       *
       * <pre>
       * The carriage has air conditioning.
       * </pre>
       */
      public static final int AIR_CONDITIONED_VALUE = 1;
      /**
       * <code>NOT_AIR_CONDITIONED = 2;</code>
       *
       * <pre>
       * The carriage does not have air conditioning.
       * </pre>
       */
      public static final int NOT_AIR_CONDITIONED_VALUE = 2;


      public final int getNumber() { return value; }

      public static AirConditioning valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN_AIRCONDITIONING;
          case 1: return AIR_CONDITIONED;
          case 2: return NOT_AIR_CONDITIONED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<AirConditioning>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AirConditioning>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AirConditioning>() {
              public AirConditioning findValueByNumber(int number) {
                return AirConditioning.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.getDescriptor().getEnumTypes().get(4);
      }

      private static final AirConditioning[] VALUES = values();

      public static AirConditioning valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private AirConditioning(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:transit_realtime.CarriageDescriptor.AirConditioning)
    }

    /**
     * Protobuf enum {@code transit_realtime.CarriageDescriptor.BicyclesAllowed}
     *
     * <pre>
     * Whether bicycles are allowed in the carriage.
     * </pre>
     */
    public enum BicyclesAllowed
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN_BICYCLES_ALLOWED = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage allows bicycles. This is the default
       * case.
       * </pre>
       */
      UNKNOWN_BICYCLES_ALLOWED(0, 0),
      /**
       * <code>ALLOWED_OUTSIDE_CARRIAGE = 1;</code>
       *
       * <pre>
       * Bicycles are allowed to be transported, but must be stored outside of
       * the carriage.
       * </pre>
       */
      ALLOWED_OUTSIDE_CARRIAGE(1, 1),
      /**
       * <code>ALLOWED_INSIDE_CARRIAGE = 2;</code>
       *
       * <pre>
       * Bicycles are allowed to be transported, and can be stored inside the
       * carriage.
       * </pre>
       */
      ALLOWED_INSIDE_CARRIAGE(2, 2),
      /**
       * <code>NOT_ALLOWED = 3;</code>
       *
       * <pre>
       * Bicycles are not allowed to be transported in this carriage.
       * </pre>
       */
      NOT_ALLOWED(3, 3),
      ;

      /**
       * <code>UNKNOWN_BICYCLES_ALLOWED = 0;</code>
       *
       * <pre>
       * It is unknown if the carriage allows bicycles. This is the default
       * case.
       * </pre>
       */
      public static final int UNKNOWN_BICYCLES_ALLOWED_VALUE = 0;
      /**
       * <code>ALLOWED_OUTSIDE_CARRIAGE = 1;</code>
       *
       * <pre>
       * Bicycles are allowed to be transported, but must be stored outside of
       * the carriage.
       * </pre>
       */
      public static final int ALLOWED_OUTSIDE_CARRIAGE_VALUE = 1;
      /**
       * <code>ALLOWED_INSIDE_CARRIAGE = 2;</code>
       *
       * <pre>
       * Bicycles are allowed to be transported, and can be stored inside the
       * carriage.
       * </pre>
       */
      public static final int ALLOWED_INSIDE_CARRIAGE_VALUE = 2;
      /**
       * <code>NOT_ALLOWED = 3;</code>
       *
       * <pre>
       * Bicycles are not allowed to be transported in this carriage.
       * </pre>
       */
      public static final int NOT_ALLOWED_VALUE = 3;


      public final int getNumber() { return value; }

      public static BicyclesAllowed valueOf(int value) {
        switch (value) {
          case 0: return UNKNOWN_BICYCLES_ALLOWED;
          case 1: return ALLOWED_OUTSIDE_CARRIAGE;
          case 2: return ALLOWED_INSIDE_CARRIAGE;
          case 3: return NOT_ALLOWED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<BicyclesAllowed>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<BicyclesAllowed>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<BicyclesAllowed>() {
              public BicyclesAllowed findValueByNumber(int number) {
                return BicyclesAllowed.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.getDescriptor().getEnumTypes().get(5);
      }

      private static final BicyclesAllowed[] VALUES = values();

      public static BicyclesAllowed valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private BicyclesAllowed(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:transit_realtime.CarriageDescriptor.BicyclesAllowed)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private java.lang.Object id_;
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Internal system identification of the carriage. Should be unique per
     * vehicle, and can be used for tracking the carriage as it proceeds through
     * the system.
     * </pre>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Internal system identification of the carriage. Should be unique per
     * vehicle, and can be used for tracking the carriage as it proceeds through
     * the system.
     * </pre>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          id_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string id = 1;</code>
     *
     * <pre>
     * Internal system identification of the carriage. Should be unique per
     * vehicle, and can be used for tracking the carriage as it proceeds through
     * the system.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LABEL_FIELD_NUMBER = 2;
    private java.lang.Object label_;
    /**
     * <code>optional string label = 2;</code>
     *
     * <pre>
     * User visible label that may be shown to the passenger to help identify
     * the carriage.
     * </pre>
     */
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string label = 2;</code>
     *
     * <pre>
     * User visible label that may be shown to the passenger to help identify
     * the carriage.
     * </pre>
     */
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          label_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string label = 2;</code>
     *
     * <pre>
     * User visible label that may be shown to the passenger to help identify
     * the carriage.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CARRIAGE_SEQUENCE_FIELD_NUMBER = 3;
    private int carriageSequence_;
    /**
     * <code>optional int32 carriage_sequence = 3;</code>
     *
     * <pre>
     * Identifies the order of this carriage with respect to the other
     * carriages in the vehicle's list of CarriageDescriptors. The values must
     * be non-negative, and there cannot be duplicate values in the list of
     * CarriageDescriptors. The values must be set such that the lowest value
     * corresponds to the first carriage in the direction of travel, the
     * second-lowest value corresponds to the second carriage in the direction
     * of travel and so forth. For example, the first carriage in the direction
     * of travel could have a carriage_sequence of 4, the second carriage could
     * have a carriage_sequence of 10, the third carriage could have a
     * carriage_sequence of 105, and so forth.
     * </pre>
     */
    public boolean hasCarriageSequence() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 carriage_sequence = 3;</code>
     *
     * <pre>
     * Identifies the order of this carriage with respect to the other
     * carriages in the vehicle's list of CarriageDescriptors. The values must
     * be non-negative, and there cannot be duplicate values in the list of
     * CarriageDescriptors. The values must be set such that the lowest value
     * corresponds to the first carriage in the direction of travel, the
     * second-lowest value corresponds to the second carriage in the direction
     * of travel and so forth. For example, the first carriage in the direction
     * of travel could have a carriage_sequence of 4, the second carriage could
     * have a carriage_sequence of 10, the third carriage could have a
     * carriage_sequence of 105, and so forth.
     * </pre>
     */
    public int getCarriageSequence() {
      return carriageSequence_;
    }

    public static final int OCCUPANCY_STATUS_FIELD_NUMBER = 4;
    private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus occupancyStatus_;
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.OccupancyStatus occupancy_status = 4;</code>
     *
     * <pre>
     * The degree of passenger occupancy of the carriage.
     * </pre>
     */
    public boolean hasOccupancyStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.OccupancyStatus occupancy_status = 4;</code>
     *
     * <pre>
     * The degree of passenger occupancy of the carriage.
     * </pre>
     */
    public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus getOccupancyStatus() {
      return occupancyStatus_;
    }

    public static final int WHEELCHAIR_ACCESSIBLE_FIELD_NUMBER = 5;
    private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible wheelchairAccessible_;
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.WheelchairAccessible wheelchair_accessible = 5 [default = UNKNOWN_ACCESSIBILITY];</code>
     */
    public boolean hasWheelchairAccessible() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.WheelchairAccessible wheelchair_accessible = 5 [default = UNKNOWN_ACCESSIBILITY];</code>
     */
    public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible getWheelchairAccessible() {
      return wheelchairAccessible_;
    }

    public static final int TOILET_FACILITIES_FIELD_NUMBER = 6;
    private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities toiletFacilities_;
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.ToiletFacilities toilet_facilities = 6 [default = UNKNOWN_TOILET_FACILITIES];</code>
     */
    public boolean hasToiletFacilities() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.ToiletFacilities toilet_facilities = 6 [default = UNKNOWN_TOILET_FACILITIES];</code>
     */
    public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities getToiletFacilities() {
      return toiletFacilities_;
    }

    public static final int WIFI_AVAILABILITY_FIELD_NUMBER = 7;
    private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability wifiAvailability_;
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.WifiAvailability wifi_availability = 7 [default = UNKNOWN_WIFI_AVAILABILITY];</code>
     */
    public boolean hasWifiAvailability() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.WifiAvailability wifi_availability = 7 [default = UNKNOWN_WIFI_AVAILABILITY];</code>
     */
    public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability getWifiAvailability() {
      return wifiAvailability_;
    }

    public static final int AIR_CONDITIONING_FIELD_NUMBER = 8;
    private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning airConditioning_;
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.AirConditioning air_conditioning = 8 [default = UNKNOWN_AIRCONDITIONING];</code>
     */
    public boolean hasAirConditioning() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.AirConditioning air_conditioning = 8 [default = UNKNOWN_AIRCONDITIONING];</code>
     */
    public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning getAirConditioning() {
      return airConditioning_;
    }

    public static final int BICYCLES_ALLOWED_FIELD_NUMBER = 9;
    private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed bicyclesAllowed_;
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.BicyclesAllowed bicycles_allowed = 9 [default = UNKNOWN_BICYCLES_ALLOWED];</code>
     */
    public boolean hasBicyclesAllowed() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .transit_realtime.CarriageDescriptor.BicyclesAllowed bicycles_allowed = 9 [default = UNKNOWN_BICYCLES_ALLOWED];</code>
     */
    public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed getBicyclesAllowed() {
      return bicyclesAllowed_;
    }

    private void initFields() {
      id_ = "";
      label_ = "";
      carriageSequence_ = 0;
      occupancyStatus_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus.EMPTY;
      wheelchairAccessible_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible.UNKNOWN_ACCESSIBILITY;
      toiletFacilities_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities.UNKNOWN_TOILET_FACILITIES;
      wifiAvailability_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability.UNKNOWN_WIFI_AVAILABILITY;
      airConditioning_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning.UNKNOWN_AIRCONDITIONING;
      bicyclesAllowed_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed.UNKNOWN_BICYCLES_ALLOWED;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLabelBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, carriageSequence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, occupancyStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, wheelchairAccessible_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, toiletFacilities_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, wifiAvailability_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, airConditioning_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(9, bicyclesAllowed_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLabelBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, carriageSequence_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, occupancyStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, wheelchairAccessible_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, toiletFacilities_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, wifiAvailability_.getNumber());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, airConditioning_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, bicyclesAllowed_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code transit_realtime.CarriageDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:transit_realtime.CarriageDescriptor)
        com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_CarriageDescriptor_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_CarriageDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.class, com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.Builder.class);
      }

      // Construct using com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        label_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        carriageSequence_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        occupancyStatus_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        wheelchairAccessible_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible.UNKNOWN_ACCESSIBILITY;
        bitField0_ = (bitField0_ & ~0x00000010);
        toiletFacilities_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities.UNKNOWN_TOILET_FACILITIES;
        bitField0_ = (bitField0_ & ~0x00000020);
        wifiAvailability_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability.UNKNOWN_WIFI_AVAILABILITY;
        bitField0_ = (bitField0_ & ~0x00000040);
        airConditioning_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning.UNKNOWN_AIRCONDITIONING;
        bitField0_ = (bitField0_ & ~0x00000080);
        bicyclesAllowed_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed.UNKNOWN_BICYCLES_ALLOWED;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.internal_static_transit_realtime_CarriageDescriptor_descriptor;
      }

      public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor getDefaultInstanceForType() {
        return com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.getDefaultInstance();
      }

      public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor build() {
        com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor buildPartial() {
        com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor result = new com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.label_ = label_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.carriageSequence_ = carriageSequence_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.occupancyStatus_ = occupancyStatus_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.wheelchairAccessible_ = wheelchairAccessible_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.toiletFacilities_ = toiletFacilities_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.wifiAvailability_ = wifiAvailability_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.airConditioning_ = airConditioning_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.bicyclesAllowed_ = bicyclesAllowed_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor) {
          return mergeFrom((com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor other) {
        if (other == com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.getDefaultInstance()) return this;
        if (other.hasId()) {
          bitField0_ |= 0x00000001;
          id_ = other.id_;
          onChanged();
        }
        if (other.hasLabel()) {
          bitField0_ |= 0x00000002;
          label_ = other.label_;
          onChanged();
        }
        if (other.hasCarriageSequence()) {
          setCarriageSequence(other.getCarriageSequence());
        }
        if (other.hasOccupancyStatus()) {
          setOccupancyStatus(other.getOccupancyStatus());
        }
        if (other.hasWheelchairAccessible()) {
          setWheelchairAccessible(other.getWheelchairAccessible());
        }
        if (other.hasToiletFacilities()) {
          setToiletFacilities(other.getToiletFacilities());
        }
        if (other.hasWifiAvailability()) {
          setWifiAvailability(other.getWifiAvailability());
        }
        if (other.hasAirConditioning()) {
          setAirConditioning(other.getAirConditioning());
        }
        if (other.hasBicyclesAllowed()) {
          setBicyclesAllowed(other.getBicyclesAllowed());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Internal system identification of the carriage. Should be unique per
       * vehicle, and can be used for tracking the carriage as it proceeds through
       * the system.
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Internal system identification of the carriage. Should be unique per
       * vehicle, and can be used for tracking the carriage as it proceeds through
       * the system.
       * </pre>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Internal system identification of the carriage. Should be unique per
       * vehicle, and can be used for tracking the carriage as it proceeds through
       * the system.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Internal system identification of the carriage. Should be unique per
       * vehicle, and can be used for tracking the carriage as it proceeds through
       * the system.
       * </pre>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Internal system identification of the carriage. Should be unique per
       * vehicle, and can be used for tracking the carriage as it proceeds through
       * the system.
       * </pre>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string id = 1;</code>
       *
       * <pre>
       * Internal system identification of the carriage. Should be unique per
       * vehicle, and can be used for tracking the carriage as it proceeds through
       * the system.
       * </pre>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object label_ = "";
      /**
       * <code>optional string label = 2;</code>
       *
       * <pre>
       * User visible label that may be shown to the passenger to help identify
       * the carriage.
       * </pre>
       */
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string label = 2;</code>
       *
       * <pre>
       * User visible label that may be shown to the passenger to help identify
       * the carriage.
       * </pre>
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            label_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string label = 2;</code>
       *
       * <pre>
       * User visible label that may be shown to the passenger to help identify
       * the carriage.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string label = 2;</code>
       *
       * <pre>
       * User visible label that may be shown to the passenger to help identify
       * the carriage.
       * </pre>
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        label_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string label = 2;</code>
       *
       * <pre>
       * User visible label that may be shown to the passenger to help identify
       * the carriage.
       * </pre>
       */
      public Builder clearLabel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      /**
       * <code>optional string label = 2;</code>
       *
       * <pre>
       * User visible label that may be shown to the passenger to help identify
       * the carriage.
       * </pre>
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        label_ = value;
        onChanged();
        return this;
      }

      private int carriageSequence_ ;
      /**
       * <code>optional int32 carriage_sequence = 3;</code>
       *
       * <pre>
       * Identifies the order of this carriage with respect to the other
       * carriages in the vehicle's list of CarriageDescriptors. The values must
       * be non-negative, and there cannot be duplicate values in the list of
       * CarriageDescriptors. The values must be set such that the lowest value
       * corresponds to the first carriage in the direction of travel, the
       * second-lowest value corresponds to the second carriage in the direction
       * of travel and so forth. For example, the first carriage in the direction
       * of travel could have a carriage_sequence of 4, the second carriage could
       * have a carriage_sequence of 10, the third carriage could have a
       * carriage_sequence of 105, and so forth.
       * </pre>
       */
      public boolean hasCarriageSequence() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 carriage_sequence = 3;</code>
       *
       * <pre>
       * Identifies the order of this carriage with respect to the other
       * carriages in the vehicle's list of CarriageDescriptors. The values must
       * be non-negative, and there cannot be duplicate values in the list of
       * CarriageDescriptors. The values must be set such that the lowest value
       * corresponds to the first carriage in the direction of travel, the
       * second-lowest value corresponds to the second carriage in the direction
       * of travel and so forth. For example, the first carriage in the direction
       * of travel could have a carriage_sequence of 4, the second carriage could
       * have a carriage_sequence of 10, the third carriage could have a
       * carriage_sequence of 105, and so forth.
       * </pre>
       */
      public int getCarriageSequence() {
        return carriageSequence_;
      }
      /**
       * <code>optional int32 carriage_sequence = 3;</code>
       *
       * <pre>
       * Identifies the order of this carriage with respect to the other
       * carriages in the vehicle's list of CarriageDescriptors. The values must
       * be non-negative, and there cannot be duplicate values in the list of
       * CarriageDescriptors. The values must be set such that the lowest value
       * corresponds to the first carriage in the direction of travel, the
       * second-lowest value corresponds to the second carriage in the direction
       * of travel and so forth. For example, the first carriage in the direction
       * of travel could have a carriage_sequence of 4, the second carriage could
       * have a carriage_sequence of 10, the third carriage could have a
       * carriage_sequence of 105, and so forth.
       * </pre>
       */
      public Builder setCarriageSequence(int value) {
        bitField0_ |= 0x00000004;
        carriageSequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 carriage_sequence = 3;</code>
       *
       * <pre>
       * Identifies the order of this carriage with respect to the other
       * carriages in the vehicle's list of CarriageDescriptors. The values must
       * be non-negative, and there cannot be duplicate values in the list of
       * CarriageDescriptors. The values must be set such that the lowest value
       * corresponds to the first carriage in the direction of travel, the
       * second-lowest value corresponds to the second carriage in the direction
       * of travel and so forth. For example, the first carriage in the direction
       * of travel could have a carriage_sequence of 4, the second carriage could
       * have a carriage_sequence of 10, the third carriage could have a
       * carriage_sequence of 105, and so forth.
       * </pre>
       */
      public Builder clearCarriageSequence() {
        bitField0_ = (bitField0_ & ~0x00000004);
        carriageSequence_ = 0;
        onChanged();
        return this;
      }

      private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus occupancyStatus_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus.EMPTY;
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.OccupancyStatus occupancy_status = 4;</code>
       *
       * <pre>
       * The degree of passenger occupancy of the carriage.
       * </pre>
       */
      public boolean hasOccupancyStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.OccupancyStatus occupancy_status = 4;</code>
       *
       * <pre>
       * The degree of passenger occupancy of the carriage.
       * </pre>
       */
      public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus getOccupancyStatus() {
        return occupancyStatus_;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.OccupancyStatus occupancy_status = 4;</code>
       *
       * <pre>
       * The degree of passenger occupancy of the carriage.
       * </pre>
       */
      public Builder setOccupancyStatus(com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        occupancyStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.OccupancyStatus occupancy_status = 4;</code>
       *
       * <pre>
       * The degree of passenger occupancy of the carriage.
       * </pre>
       */
      public Builder clearOccupancyStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        occupancyStatus_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.OccupancyStatus.EMPTY;
        onChanged();
        return this;
      }

      private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible wheelchairAccessible_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible.UNKNOWN_ACCESSIBILITY;
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.WheelchairAccessible wheelchair_accessible = 5 [default = UNKNOWN_ACCESSIBILITY];</code>
       */
      public boolean hasWheelchairAccessible() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.WheelchairAccessible wheelchair_accessible = 5 [default = UNKNOWN_ACCESSIBILITY];</code>
       */
      public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible getWheelchairAccessible() {
        return wheelchairAccessible_;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.WheelchairAccessible wheelchair_accessible = 5 [default = UNKNOWN_ACCESSIBILITY];</code>
       */
      public Builder setWheelchairAccessible(com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        wheelchairAccessible_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.WheelchairAccessible wheelchair_accessible = 5 [default = UNKNOWN_ACCESSIBILITY];</code>
       */
      public Builder clearWheelchairAccessible() {
        bitField0_ = (bitField0_ & ~0x00000010);
        wheelchairAccessible_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WheelchairAccessible.UNKNOWN_ACCESSIBILITY;
        onChanged();
        return this;
      }

      private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities toiletFacilities_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities.UNKNOWN_TOILET_FACILITIES;
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.ToiletFacilities toilet_facilities = 6 [default = UNKNOWN_TOILET_FACILITIES];</code>
       */
      public boolean hasToiletFacilities() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.ToiletFacilities toilet_facilities = 6 [default = UNKNOWN_TOILET_FACILITIES];</code>
       */
      public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities getToiletFacilities() {
        return toiletFacilities_;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.ToiletFacilities toilet_facilities = 6 [default = UNKNOWN_TOILET_FACILITIES];</code>
       */
      public Builder setToiletFacilities(com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        toiletFacilities_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.ToiletFacilities toilet_facilities = 6 [default = UNKNOWN_TOILET_FACILITIES];</code>
       */
      public Builder clearToiletFacilities() {
        bitField0_ = (bitField0_ & ~0x00000020);
        toiletFacilities_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.ToiletFacilities.UNKNOWN_TOILET_FACILITIES;
        onChanged();
        return this;
      }

      private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability wifiAvailability_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability.UNKNOWN_WIFI_AVAILABILITY;
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.WifiAvailability wifi_availability = 7 [default = UNKNOWN_WIFI_AVAILABILITY];</code>
       */
      public boolean hasWifiAvailability() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.WifiAvailability wifi_availability = 7 [default = UNKNOWN_WIFI_AVAILABILITY];</code>
       */
      public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability getWifiAvailability() {
        return wifiAvailability_;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.WifiAvailability wifi_availability = 7 [default = UNKNOWN_WIFI_AVAILABILITY];</code>
       */
      public Builder setWifiAvailability(com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        wifiAvailability_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.WifiAvailability wifi_availability = 7 [default = UNKNOWN_WIFI_AVAILABILITY];</code>
       */
      public Builder clearWifiAvailability() {
        bitField0_ = (bitField0_ & ~0x00000040);
        wifiAvailability_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.WifiAvailability.UNKNOWN_WIFI_AVAILABILITY;
        onChanged();
        return this;
      }

      private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning airConditioning_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning.UNKNOWN_AIRCONDITIONING;
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.AirConditioning air_conditioning = 8 [default = UNKNOWN_AIRCONDITIONING];</code>
       */
      public boolean hasAirConditioning() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.AirConditioning air_conditioning = 8 [default = UNKNOWN_AIRCONDITIONING];</code>
       */
      public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning getAirConditioning() {
        return airConditioning_;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.AirConditioning air_conditioning = 8 [default = UNKNOWN_AIRCONDITIONING];</code>
       */
      public Builder setAirConditioning(com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        airConditioning_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.AirConditioning air_conditioning = 8 [default = UNKNOWN_AIRCONDITIONING];</code>
       */
      public Builder clearAirConditioning() {
        bitField0_ = (bitField0_ & ~0x00000080);
        airConditioning_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.AirConditioning.UNKNOWN_AIRCONDITIONING;
        onChanged();
        return this;
      }

      private com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed bicyclesAllowed_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed.UNKNOWN_BICYCLES_ALLOWED;
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.BicyclesAllowed bicycles_allowed = 9 [default = UNKNOWN_BICYCLES_ALLOWED];</code>
       */
      public boolean hasBicyclesAllowed() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.BicyclesAllowed bicycles_allowed = 9 [default = UNKNOWN_BICYCLES_ALLOWED];</code>
       */
      public com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed getBicyclesAllowed() {
        return bicyclesAllowed_;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.BicyclesAllowed bicycles_allowed = 9 [default = UNKNOWN_BICYCLES_ALLOWED];</code>
       */
      public Builder setBicyclesAllowed(com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        bicyclesAllowed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .transit_realtime.CarriageDescriptor.BicyclesAllowed bicycles_allowed = 9 [default = UNKNOWN_BICYCLES_ALLOWED];</code>
       */
      public Builder clearBicyclesAllowed() {
        bitField0_ = (bitField0_ & ~0x00000100);
        bicyclesAllowed_ = com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.BicyclesAllowed.UNKNOWN_BICYCLES_ALLOWED;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:transit_realtime.CarriageDescriptor)
    }

    static {
      defaultInstance = new CarriageDescriptor(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:transit_realtime.CarriageDescriptor)
  }

  public static final int MTA_RAILROAD_STOP_TIME_UPDATE_FIELD_NUMBER = 1005;
  /**
   * <code>extend .transit_realtime.TripUpdate.StopTimeUpdate { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.transit.realtime.GtfsRealtime.TripUpdate.StopTimeUpdate,
      com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate> mtaRailroadStopTimeUpdate = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate.class,
        com.google.transit.realtime.GtfsRealtimeMTARR.MtaRailroadStopTimeUpdate.getDefaultInstance());
  public static final int CARRIAGE_DESCRIPTOR_FIELD_NUMBER = 1005;
  /**
   * <code>extend .transit_realtime.VehicleDescriptor { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.transit.realtime.GtfsRealtime.VehicleDescriptor,
      java.util.List<com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor>> carriageDescriptor = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.class,
        com.google.transit.realtime.GtfsRealtimeMTARR.CarriageDescriptor.getDefaultInstance());
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_transit_realtime_MtaRailroadStopTimeUpdate_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_transit_realtime_MtaRailroadStopTimeUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_transit_realtime_CarriageDescriptor_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_transit_realtime_CarriageDescriptor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5com/google/transit/realtime/gtfs-realt" +
      "ime-MTARR.proto\022\020transit_realtime\032/com/g" +
      "oogle/transit/realtime/gtfs-realtime.pro" +
      "to\"?\n\031MtaRailroadStopTimeUpdate\022\r\n\005track" +
      "\030\001 \001(\t\022\023\n\013trainStatus\030\002 \001(\t\"\356\n\n\022Carriage" +
      "Descriptor\022\n\n\002id\030\001 \001(\t\022\r\n\005label\030\002 \001(\t\022\031\n" +
      "\021carriage_sequence\030\003 \001(\005\022N\n\020occupancy_st" +
      "atus\030\004 \001(\01624.transit_realtime.CarriageDe" +
      "scriptor.OccupancyStatus\022o\n\025wheelchair_a" +
      "ccessible\030\005 \001(\01629.transit_realtime.Carri",
      "ageDescriptor.WheelchairAccessible:\025UNKN" +
      "OWN_ACCESSIBILITY\022k\n\021toilet_facilities\030\006" +
      " \001(\01625.transit_realtime.CarriageDescript" +
      "or.ToiletFacilities:\031UNKNOWN_TOILET_FACI" +
      "LITIES\022k\n\021wifi_availability\030\007 \001(\01625.tran" +
      "sit_realtime.CarriageDescriptor.WifiAvai" +
      "lability:\031UNKNOWN_WIFI_AVAILABILITY\022g\n\020a" +
      "ir_conditioning\030\010 \001(\01624.transit_realtime" +
      ".CarriageDescriptor.AirConditioning:\027UNK" +
      "NOWN_AIRCONDITIONING\022h\n\020bicycles_allowed",
      "\030\t \001(\01624.transit_realtime.CarriageDescri" +
      "ptor.BicyclesAllowed:\030UNKNOWN_BICYCLES_A" +
      "LLOWED\"\257\001\n\017OccupancyStatus\022\t\n\005EMPTY\020\000\022\030\n" +
      "\024MANY_SEATS_AVAILABLE\020\001\022\027\n\023FEW_SEATS_AVA" +
      "ILABLE\020\002\022\026\n\022STANDING_ROOM_ONLY\020\003\022\036\n\032CRUS" +
      "HED_STANDING_ROOM_ONLY\020\004\022\010\n\004FULL\020\005\022\034\n\030NO" +
      "T_ACCEPTING_PASSENGERS\020\006\"k\n\024WheelchairAc" +
      "cessible\022\031\n\025UNKNOWN_ACCESSIBILITY\020\000\022\031\n\025W" +
      "HEELCHAIR_ACCESSIBLE\020\001\022\035\n\031NOT_WHEELCHAIR" +
      "_ACCESSIBLE\020\002\"\\\n\020ToiletFacilities\022\035\n\031UNK",
      "NOWN_TOILET_FACILITIES\020\000\022\022\n\016TOILET_ONBOA" +
      "RD\020\001\022\025\n\021NO_TOILET_ONBOARD\020\002\"\\\n\020WifiAvail" +
      "ability\022\035\n\031UNKNOWN_WIFI_AVAILABILITY\020\000\022\r" +
      "\n\tFREE_WIFI\020\001\022\r\n\tPAID_WIFI\020\002\022\013\n\007NO_WIFI\020" +
      "\003\"\\\n\017AirConditioning\022\033\n\027UNKNOWN_AIRCONDI" +
      "TIONING\020\000\022\023\n\017AIR_CONDITIONED\020\001\022\027\n\023NOT_AI" +
      "R_CONDITIONED\020\002\"{\n\017BicyclesAllowed\022\034\n\030UN" +
      "KNOWN_BICYCLES_ALLOWED\020\000\022\034\n\030ALLOWED_OUTS" +
      "IDE_CARRIAGE\020\001\022\033\n\027ALLOWED_INSIDE_CARRIAG" +
      "E\020\002\022\017\n\013NOT_ALLOWED\020\003:\200\001\n\035mta_railroad_st",
      "op_time_update\022+.transit_realtime.TripUp" +
      "date.StopTimeUpdate\030\355\007 \001(\0132+.transit_rea" +
      "ltime.MtaRailroadStopTimeUpdate:g\n\023carri" +
      "age_descriptor\022#.transit_realtime.Vehicl" +
      "eDescriptor\030\355\007 \003(\0132$.transit_realtime.Ca" +
      "rriageDescriptorB\035\n\033com.google.transit.r" +
      "ealtime"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.transit.realtime.GtfsRealtime.getDescriptor(),
        }, assigner);
    internal_static_transit_realtime_MtaRailroadStopTimeUpdate_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_transit_realtime_MtaRailroadStopTimeUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_transit_realtime_MtaRailroadStopTimeUpdate_descriptor,
        new java.lang.String[] { "Track", "TrainStatus", });
    internal_static_transit_realtime_CarriageDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_transit_realtime_CarriageDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_transit_realtime_CarriageDescriptor_descriptor,
        new java.lang.String[] { "Id", "Label", "CarriageSequence", "OccupancyStatus", "WheelchairAccessible", "ToiletFacilities", "WifiAvailability", "AirConditioning", "BicyclesAllowed", });
    mtaRailroadStopTimeUpdate.internalInit(descriptor.getExtensions().get(0));
    carriageDescriptor.internalInit(descriptor.getExtensions().get(1));
    com.google.transit.realtime.GtfsRealtime.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
